name: main

on:
    push:
        branches: [master]
        tags:
            - "v*.*.*"
    pull_request:
        branches: [master]
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always

jobs:
    check-fmt:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
            - run: npm ci
            - name: Check formatting
              run: npm run fmt -- --check
            - name: Check Rust formatting
              run: cargo fmt -- --check
    build:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
        runs-on: ${{ matrix.os }}
        env:
            RUSTFLAGS: -D warnings
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - run: npm ci;
            - name: Prepare no-compat builds
              run: |
                  ./builds/prepare_builds/prepare_all_projects.sh
            - name: Build all no-compat projects
              run: |
                  ./builds/prepare_builds/build_all_projects.sh
            # Install dependencies to check simd for builds
            - name: Install wabt
              run: |
                  sudo apt install wabt;
              if: matrix.os == 'ubuntu-latest'
            - name: Install wabt
              run: |
                  brew install wabt;
              if: matrix.os == 'macos-latest'
            - name: Check simd rust build
              run: |
                  ./scripts/verify_simd_rust.sh
            - uses: actions/upload-artifact@v4
              with:
                  name: pkg no-compat ${{ matrix.os }}
                  path: |
                      builds/*/pkg
                  overwrite: true
    build-compat:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
        runs-on: ${{ matrix.os }}
        env:
            RUSTFLAGS: -D warnings
        steps:
            - uses: actions/checkout@v4
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Prepare compat builds
              run: |
                  ./builds/prepare_builds/prepare_all_projects.sh
            - run: npm ci;
            - name: Build rapier-compat
              run: |
                  cd rapier-compat;
                  npm ci;
                  npm run build;
                  npm run test;
                  cd -;
            # Install dependencies to check simd for builds
            - name: Install wabt
              run: |
                  sudo apt install wabt;
              if: matrix.os == 'ubuntu-latest'
            - name: Install wabt
              run: |
                  brew install wabt;
              if: matrix.os == 'macos-latest'
            # Check simd for compat builds
            - name: Check simd compat build
              run: |
                  ./scripts/verify_simd_compat.sh
            # Upload
            - uses: actions/upload-artifact@v4
              with:
                  name: pkg compat ${{ matrix.os }}
                  path: |
                      rapier-compat/builds/*/pkg
                  overwrite: true
    publish-canary:
        runs-on: ubuntu-latest
        needs: [build, build-compat]
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: pkg no-compat ubuntu-latest
                  path: builds
            - uses: actions/download-artifact@v4
              with:
                  name: pkg compat ubuntu-latest
                  path: rapier-compat/builds
            - uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
                  registry-url: "https://registry.npmjs.org"
            - name: Publish projects
              run: |
                  ./publish_all_canary.sh
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    publish-prod:
        runs-on: ubuntu-latest
        needs: [build, build-compat]
        # To avoid releasing a wrong version: check this commit is tagged
        if: startsWith(github.event.workflow_run.head_branch, 'refs/tags/v') }}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: pkg no-compat ubuntu-latest
                  path: builds
            - uses: actions/download-artifact@v4
              with:
                  name: pkg compat ubuntu-latest
                  path: rapier-compat/builds
            - uses: actions/setup-node@v4
              with:
                  node-version: "22.x"
                  registry-url: "https://registry.npmjs.org"
            - name: Publish projects
              run: |
                  ./publish_all_prod.sh
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
